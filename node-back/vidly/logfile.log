{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndUpdate (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3290:8)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:37:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndDelete (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3486:8)\n    at model.Query._findOneAndRemove (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3699:15)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:48:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndUpdate (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3290:8)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:37:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndDelete (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3486:8)\n    at model.Query._findOneAndRemove (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3699:15)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:48:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndUpdate (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3290:8)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:37:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndDelete (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3486:8)\n    at model.Query._findOneAndRemove (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3699:15)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:48:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndUpdate (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3290:8)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:37:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndDelete (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3486:8)\n    at model.Query._findOneAndRemove (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3699:15)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:48:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndUpdate (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3290:8)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:37:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndDelete (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3486:8)\n    at model.Query._findOneAndRemove (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3699:15)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:48:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndUpdate (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3290:8)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:37:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndDelete (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3486:8)\n    at model.Query._findOneAndRemove (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3699:15)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:48:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndUpdate (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3290:8)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:37:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndDelete (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3486:8)\n    at model.Query._findOneAndRemove (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3699:15)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:48:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndUpdate (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3290:8)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:37:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndDelete (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3486:8)\n    at model.Query._findOneAndRemove (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3699:15)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:48:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndUpdate (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3290:8)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:37:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndDelete (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3486:8)\n    at model.Query._findOneAndRemove (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3699:15)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:48:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndUpdate (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3290:8)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:37:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndDelete (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3486:8)\n    at model.Query._findOneAndRemove (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3699:15)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:48:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndUpdate (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3290:8)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:37:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndDelete (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3486:8)\n    at model.Query._findOneAndRemove (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3699:15)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:48:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndUpdate (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3290:8)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:37:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndDelete (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3486:8)\n    at model.Query._findOneAndRemove (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3699:15)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:48:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndDelete (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3486:8)\n    at model.Query._findOneAndRemove (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3699:15)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:48:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndDelete (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3486:8)\n    at model.Query._findOneAndRemove (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3699:15)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:46:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndDelete (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3486:8)\n    at model.Query._findOneAndRemove (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3699:15)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:46:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndDelete (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3486:8)\n    at model.Query._findOneAndRemove (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3699:15)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:46:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndDelete (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3486:8)\n    at model.Query._findOneAndRemove (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3699:15)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:46:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\" Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" for model \"Genre\"\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schema/objectid.js:248:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1204:12)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/schematype.js:1616:15)\n    at cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/cast.js:356:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4886:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:2210:10)\n    at model.Query._findOneAndDelete (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3486:8)\n    at model.Query._findOneAndRemove (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:3699:15)\n    at model.Query.exec (/Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/node_modules/mongoose/lib/query.js:4405:28)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at /Users/dayevan/Desktop/BerkeleyCS/learning-JavaScript/node-back/vidly/routes/genres.js:45:17","stringValue":"\"1\"","value":"1","valueType":"string"}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
{"level":"info","message":"Listening on port 3000..."}
{"level":"info","message":"Connected to MongoDB..."}
